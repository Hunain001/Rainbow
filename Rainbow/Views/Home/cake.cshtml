@model Rainbow.Models.Cake

@{
    ViewData["Title"] = "Add New Cake";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

<style>
    .form-card {
        background-color: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(216, 27, 96, 0.1);
        margin-top: 40px;
    }

    .btn-pink {
        background-color: #d81b60;
        color: #fff;
        font-weight: bold;
        border-radius: 30px;
        padding: 10px 25px;
    }

        .btn-pink:hover {
            background-color: #c2185b;
        }

    .form-label {
        font-weight: bold;
        color: #5d4037;
    }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="form-card">
                <h2 class="text-center mb-4 text-danger"><i class="fa-solid fa-cake-candles"></i> Add New Cake</h2>

                @using (Html.BeginForm("cake", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="mb-3">
                        @Html.LabelFor(a => a.CakeName, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(a => a.CakeName, new { @class = "form-control", placeholder = "Enter cake name" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.id, "Category", htmlAttributes: new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.id, ViewBag.categories as SelectList, "Select a Category", new { @class = "form-select" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(a => a.Description, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(a => a.Description, new { @class = "form-control", placeholder = "Short description" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(a => a.Price, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(a => a.Price, new { @class = "form-control", placeholder = "Enter price in ₹" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Upload Image</label>
                        <input type="file" name="imageFile" class="form-control" />
                    </div>

                    <div class="mb-4">
                        <label class="form-label">Is Special?</label><br />
                        <div class="form-check form-check-inline">
                            @Html.RadioButtonFor(model => model.isspecial, "Yes", new { @class = "form-check-input", id = "specialYes" })
                            <label class="form-check-label" for="specialYes">Yes</label>
                        </div>
                        <div class="form-check form-check-inline">
                            @Html.RadioButtonFor(model => model.isspecial, "No", new { @class = "form-check-input", id = "specialNo" })
                            <label class="form-check-label" for="specialNo">No</label>
                        </div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-pink">
                            <i class="fa fa-plus"></i> Add Cake
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
